user  root root;
worker_processes  2;
#worker_rlimit_nofile 70000;
#worker_cpu_affinity  0001 0010;
pid  /secone/var/run/webap.pid;
daemon off;
master_process off;
pcre_jit on;
error_log /usr/local/openresty/nginx/logs/error.log;

worker_rlimit_core 50M;
working_directory /tmp;

#load_module modules/ngx_http_twaf_header_sent_filter_module.so;

events {
    use epoll;
    worker_connections  1000;
    multi_accept on;
    accept_mutex off;
}


http {
    include            mime.types;
    include            /opt/OpenWAF/conf/twaf_main.conf;
    include            /opt/OpenWAF/conf/twaf_webapadmin.conf;
    
    default_type       text/html;
    tcp_nopush         on;
    sendfile           on;
    keepalive_requests 100;
    keepalive_timeout  60 60;
    
    upstream test {
       server 0.0.0.1; #just an invalid address as a place holder
       balancer_by_lua_file /opt/OpenWAF/app/twaf_balancer.lua;
    }
    
    server {
        listen 443 ssl;
        server_name _;
        
        ssl_certificate /usr/local/openresty/nginx/conf/ssl/nginx.crt;
        ssl_certificate_key /usr/local/openresty/nginx/conf/ssl/nginx.key;
        ssl_protocols TLSv1.1 TLSv1.2;
        
        include                     /opt/OpenWAF/conf/twaf_server.conf;
        ssl_certificate_by_lua_file /secone/webapng/lualib/twaf/app/twaf_ssl_cert.lua;
        
        set $twaf_https 1;
        set $twaf_upstream_server "";

        location / {
            lua_need_request_body on;
            proxy_pass $twaf_upstream_server;
        }
    }
    
    server {
        listen       80;
        server_name  _;
        include      /opt/OpenWAF/conf/twaf_server.conf;
        
        set $twaf_upstream_server "";

        location / {
            lua_need_request_body on;
            proxy_pass $twaf_upstream_server;
        }
    }
}
